<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1" />
    <title>Quartz Management</title>
	<link type="text/css" href="Contents/css/dark-hive/jquery-ui-1.8.21.custom.css" rel="stylesheet" />
    <style type="text/css">

        body 
        {
            color: White;
            font-family: Verdana;
            background-color: #000000;
        }
        
        .siteHeader
        {
            font-size: 28px;
            margin-top: 10px;
            margin-bottom: 10px;
            width: 100%;
        }
        
        .loadingIcon
        {
            display: none;
            float: right;
        }
        
        .check 
        {
            background-image: url(Contents/images/Check.png);
            background-position: center;
            width: 32px;
            height: 32px;
            text-align: center;
        }
        
        .jobTable
        {
            width: 100%;            
        }
        
        .jobTable td
        {
            vertical-align: top;
        }
        
        .jobTable th
        {
            text-align: left;
        }
        
        .concurrencyColumn 
        {
            text-align: center;
        }
            
        </style>
    <script src="Contents/js/jquery-1.7.2.min.js" type="text/javascript"></script>
	<script src="Contents/js/jquery-ui-1.8.21.custom.min.js" type="text/javascript"></script>
    <script src="Contents/js/knockout-2.1.0.js" type="text/javascript"></script>
    <script type="text/javascript">
        function fireJob(element) {
            //get href off element and call ajax
        }
    </script>
</head>
<body>
<div>
     <div class="siteHeader">QuartzPocketWatch <div class="loadingIcon"><img src="Contents/images/loading_icon.gif" /></div></div>
	 <div data-bind="jqTabs: JobGroups" >	 
		<ul data-bind="template: { name: 'jobTab-template', foreach: JobGroups}"></ul>
		<div data-bind="template: { name: 'jobPane-template', foreach: JobGroups}"></div>
	 </div>
     <div><input type="button" data-bind="click: refresh" onclick="reloadData();" /></div>
</div>

    <script type="text/html" id="jobTab-template" >
        <li><a data-bind="attr: {href: '#' + GroupName }, text: GroupName"></a></li>
    </script>

    <script type="text/html" id="jobPane-template" >
        <div data-bind="attr: {id: GroupName}">
        <table class="jobTable">
          <thead>
            <th>Job Name</th>
            <th>Description</th>
            <th>Concurrent</th>
            <th>JobType</th>
            <th>Execute Job</th>
            <th>Triggers</th>
          </thead>
          <tbody data-bind="foreach: Jobs" >

          <tr>
            <td data-bind="text: JobName" ></td>
            <td data-bind="text: Description" ></td>
            <td align="center" class="concurrencyColumn" ><div class="check" data-bind="css: {check: ConcurrentExecutionAllowed}"></div></td>
            <td data-bind="text: JobType" ></td>
            <td><a class="fireLink" data-bind="attr: {href: FireUrl}">Execute</a></td>
            <td >
                <div data-bind="foreach: TriggersForJob, accordion: {collapsible: true}"  >
                    <h3><a href="#" data-bind="text: TriggerName"></a></h3>
                    <div>
                        <ul>
                          <li>Start Time: <span data-bind="text: StartTime"></span></li>
                          <li>Next Fire Time: <span data-bind="text: NextFireTime"></span></li>
                        </ul>
                    </div>
                </div>   
            </td>
          </tr>

          </tbody>
          </tbody>
        </table>
        </div>
    </script>

    <script type="text/html" id="jobRow-template" >
      <tr>
        <td data-bind="text: JobName" ></td>
        <td data-bind="text: Description" ></td>
        <td ><div class="check" data-bind="css: {check: ConcurrentExecutionAllowed}"></div></td>
        <td data-bind="text: JobType" ></td>
        <td><a href="#">Execute</a> </td>
      </tr>
    </script>

	<script type="text/javascript">
	    var viewModel = {
	        refresh: function () {
	            $(".loadingIcon").show();

	            $.getJSON(jobDataUrl, function (data) {
	                viewModel.JobGroups(data.JobGroups);
	                //alert("refreshing");
	                //applyWidgits();
	            });

	            $(".loadingIcon").hide();
	        }
	    };

	    //	    var reloadCount = 0;
	    var jobDataUrl = "/json/syncreply/Scheduler";

	    //$(document).ready(function () { setInterval(reloadData, 2000); });
	    $(document).ready(loadData);

	    ko.bindingHandlers.jqTabs = {
	        update: function (element, valueAccessor, allBindingsAccessor) {
	            var dependency = ko.utils.unwrapObservable(valueAccessor()),
                currentIndex = $(element).tabs("option", "selected") || 0,
                config = ko.utils.unwrapObservable(allBindingsAccessor().jqTabOptions) || {};

	            //alert(currentIndex);
	            //make sure that elements are set from template before calling tabs API
	            setTimeout(function () {
	                $(element).tabs("destroy").tabs(config).tabs("option", "selected", currentIndex);
	            }, 0);
	        }
	    };

	    ko.bindingHandlers.accordion = {
	        init: function (element, valueAccessor) {
	            var options = valueAccessor() || {};
	            setTimeout(function () {
	                $(element).accordion(options);
	            }, 0);

	            //handle disposal (if KO removes by the template binding)
	            ko.utils.domNodeDisposal.addDisposeCallback(element, function () {
	                $(element).accordion("destroy");
	            });
	        },
	        update: function (element, valueAccessor) {
	            var options = valueAccessor() || {};
	            var currentIndex = $(element).accordion("option", "active");

	            //alert(currentIndex.toString());
//	            for (i = 0; i < currentIndex.length; i++) {
//	                console.log("log: " + currentIndex[i]);
//	            }

	            //TODO: not sure why this doesn't work, to capture and reset the active accordian element
//	            var options = { active: currentIndex, collapsible: true };
	            //	            setTimeout(function () {
	            //	                $(element).accordion("destroy").accordion("option", "active", 2);
	            //	            }, 0);

	            $(element).accordion("destroy").accordion(options);
	        }
	    }


	    function loadData() {
	        $.getJSON(jobDataUrl, function (data) {
	            //viewModel = { JobGroups: ko.observableArray(data.JobGroups) };
	            viewModel.JobGroups = ko.observableArray(data.JobGroups) 
	            ko.applyBindings(viewModel);
	            //applyWidgits();
	        });
	    }

	    function applyWidgits() {
	        $(".accordion").accordion({ collapsible: true });
	        $("#tabs").tabs();
	        jQuery('.fireLink').bind('click', function (e) {
	            $.ajax(
                    {
                        url: e.target.href
                    });
	            e.preventDefault();
	        });
	    }

	    function reloadData() {

	        $(".loadingIcon").show();

	        $.getJSON(jobDataUrl, function (data) {
	            viewModel.JobGroups(data.JobGroups);
	            //applyWidgits();
	        });
	        
            $(".loadingIcon").hide();

        }




	</script>	
</body>
</html>